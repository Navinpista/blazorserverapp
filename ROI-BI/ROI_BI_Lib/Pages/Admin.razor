@page "/Admin"
@using System.ComponentModel.DataAnnotations
@using ROI_BI_Lib.Data
@using ROI_BI_Lib.Models
@inject ROIAdminService AdminSvc

@code {
    private bool UserDialogVisible;
    private bool MenuDialogVisible;
    private bool ReportDialogVisible;
    private bool ReportAccessDialogVisible;

    private DialogOptions UserDialogOptions = new() { FullWidth = true };
    private DialogOptions MenuDialogOptions = new() { FullWidth = true };
    private DialogOptions ReportDialogOptions = new() { FullWidth = true };
    private DialogOptions ReportAccessDialogOptions = new() { FullWidth = true };


    private void ManageFormDialog(string formtype, bool action, int id=0)
    {
        switch (formtype)
        {
            case "User":  if (id > 0) { GetUser(id); } UserDialogVisible = action; break;
            case "Menu": MenuDialogVisible = action; break;
            case "Report": ReportDialogVisible = action; break;
            case "ReportAccess": ReportAccessDialogVisible = action; break;
        }
    }

    private void GetUser(int id)
    {
        userModel= AdminSvc.GetUser(id);
        //StateHasChanged();
    }

    private void UserSave()
    {

    }

}


<MudDialog @bind-IsVisible="UserDialogVisible" Options="UserDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add User
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@userModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="First Name" @bind-Value="userModel.FirstName" For="@(() => userModel.FirstName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Last Name" @bind-Value="userModel.LastName" For="@(() => userModel.LastName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Username" @bind-Value="userModel.UserName" For="@(() => userModel.UserName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Password" @bind-Value="userModel.Password" For="@(() => userModel.Password)" InputType="InputType.Password" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsActive" @bind-Value="userModel.IsActive" For="@(() => userModel.IsActive)" />
                </MudItem>
            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("User",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="UserSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="MenuDialogVisible" Options="MenuDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add Menu
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@menuModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="First Name" @bind-Value="menuModel.MenuName" For="@(() => menuModel.MenuName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Last Name" @bind-Value="menuModel.Description" For="@(() => menuModel.Description)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Icon" @bind-Value="menuModel.Icon" For="@(() => menuModel.Icon)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="Status" @bind-Value="menuModel.Status" For="@(() => menuModel.Status)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsGroup" @bind-Value="menuModel.IsGroup" For="@(() => menuModel.IsGroup)" />
                </MudItem>
            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("Menu",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="UserSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="ReportDialogVisible" Options="ReportDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add Menu
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@menuModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="First Name" @bind-Value="menuModel.MenuName" For="@(() => menuModel.MenuName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Last Name" @bind-Value="menuModel.Description" For="@(() => menuModel.Description)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Icon" @bind-Value="menuModel.Icon" For="@(() => menuModel.Icon)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="Status" @bind-Value="menuModel.Status" For="@(() => menuModel.Status)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsGroup" @bind-Value="menuModel.IsGroup" For="@(() => menuModel.IsGroup)" />
                </MudItem>
            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("Report",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="UserSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="ReportAccessDialogVisible" Options="ReportAccessDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add Menu
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@menuModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="First Name" @bind-Value="menuModel.MenuName" For="@(() => menuModel.MenuName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Last Name" @bind-Value="menuModel.Description" For="@(() => menuModel.Description)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Icon" @bind-Value="menuModel.Icon" For="@(() => menuModel.Icon)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="Status" @bind-Value="menuModel.Status" For="@(() => menuModel.Status)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsGroup" @bind-Value="menuModel.IsGroup" For="@(() => menuModel.IsGroup)" />
                </MudItem>
            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("ReportAccess",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="UserSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-2" Style="height:100%">
    <MudTabPanel Text="User" OnClick="@GetAllUser">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("User",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add User</MudButton>
        <MudTable Items="@lstUser" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>User Name</MudTh>
                <MudTh>Password</MudTh>
                <MudTh>IsActive</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.FirstName  @context.LastName</MudTd>
                <MudTd>@context.UserName</MudTd>
                <MudTd>@context.Password</MudTd>
                <MudTd>@context.IsActive</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@(() => ManageFormDialog("User",true,@context.UserId))" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Menu" OnClick="@GetAllMenu">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("Menu",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add Menu</MudButton>

        <MudTable Items="@lstMenu" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Menu Name</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>IsGroup</MudTh>
                <MudTh>Status</MudTh>
                <MudTh>Icon</MudTh>
                <MudTh>Sort Order</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.MenuName</MudTd>
                <MudTd>@context.Description</MudTd>
                <MudTd>@context.IsGroup</MudTd>
                <MudTd>@context.Status</MudTd>
                <MudTd>@context.Icon</MudTd>
                <MudTd>@context.Sortorder</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick=@(()=> ManageFormDialog("Menu",true)) />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Report" OnClick="@GetAllReport">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("Report",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add Report</MudButton>

        <MudTable Items="@lstReport" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Report Name</MudTh>
                <MudTh>Report Id</MudTh>
                <MudTh>Password</MudTh>
                <MudTh>IsDashboard</MudTh>
                <MudTh>TenantId</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ReportName</MudTd>
                <MudTd>@context.ReportGuid</MudTd>
                <MudTd>@context.IsDashboard</MudTd>
                <MudTd>@context.TenantId</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick=@(()=> ManageFormDialog("Report",true)) />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

    </MudTabPanel>
    <MudTabPanel Text="Access" OnClick="@GetAllReportAccess">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("ReportAccess",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add Access</MudButton>

        <MudTable Items="@lstUser" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>User Name</MudTh>
                <MudTh>Password</MudTh>
                <MudTh>IsActive</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.FirstName  @context.LastName</MudTd>
                <MudTd>@context.UserName</MudTd>
                <MudTd>@context.Password</MudTd>
                <MudTd>@context.IsActive</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick=@(()=> ManageFormDialog("ReportAccess",true)) />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

    </MudTabPanel>
</MudTabs>






@code {
    UserLogin userModel = new UserLogin();
    ROI_BI_Lib.Models.Menu menuModel = new ROI_BI_Lib.Models.Menu();
    bool success;
    private string searchString1 = "";
    private UserLogin selectedItem1 = null;
    private HashSet<UserLogin> selectedItems = new HashSet<UserLogin>();
    private IEnumerable<UserLogin> lstUser = new List<UserLogin>();
    private IEnumerable<ROI_BI_Lib.Models.Menu> lstMenu = new List<ROI_BI_Lib.Models.Menu>();
    private IEnumerable<Report> lstReport = new List<Report>();
    private IEnumerable<ReportAccess> lstAccess = new List<ReportAccess>();


    private bool _isCellEditMode = true;
    private List<string> _events = new();
    private bool _editTriggerRowClick;

    void StartedEditingItem(UserLogin item)
    {
        _events.Insert(0, $"Event = StartedEditingItem, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
    }

    void CancelledEditingItem(UserLogin item)
    {
        _events.Insert(0, $"Event = CancelledEditingItem, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
    }

    void CommittedItemChanges(UserLogin item)
    {
        _events.Insert(0, $"Event = CommittedItemChanges, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
    }

    protected override async Task OnInitializedAsync()
    {
        lstUser = await AdminSvc.GetAllUser();
    }

    private async Task GetAllMenu()
    {
        lstMenu = await AdminSvc.GetAllMenu();
    }

    private async Task GetAllReport()
    {
        lstReport = await AdminSvc.GetAllReport();
    }

    private async Task GetAllReportAccess()
    {
        lstAccess = await AdminSvc.GetAllAccess();
    }
    private async Task GetAllUser()
    {
        lstUser = await AdminSvc.GetAllUser();
    }

    private bool FilterFunc1(UserLogin user) => FilterFunc(user, searchString1);

    private bool FilterFunc(UserLogin user, string searchString)
    {
        //if (string.IsNullOrWhiteSpace(searchString))
        //    return true;
        //if (element.Sign.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;
        //if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;
        //if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
        //    return true;
        return false;
    }

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

}
