@page "/Admin"
@using System.ComponentModel.DataAnnotations
@using ROI_BI_Lib.Data
@using ROI_BI_Lib.Models
@using ROI_BI_Lib.Models.Dto
@inject ROIAdminService AdminSvc


@code {
    bool success;
    private string searchString1 = "";
    private UserLogin selectedItem1 = null;
    private HashSet<UserLogin> selectedItems = new HashSet<UserLogin>();
    private IEnumerable<UserLogin> lstUser = new List<UserLogin>();
    private IEnumerable<ROI_BI_Lib.Models.Menu> lstMenu = new List<ROI_BI_Lib.Models.Menu>();
    private IEnumerable<Report> lstReport = new List<Report>();
    private IEnumerable<ReportAccess> lstAccess = new List<ReportAccess>();
    private IEnumerable<Tenant> lstTenant = new List<Tenant>();
    private IEnumerable<UserAccessDTO> lstUserAccess = new List<UserAccessDTO>();

    UserLogin userModel = new UserLogin();
    ROI_BI_Lib.Models.Menu menuModel = new ROI_BI_Lib.Models.Menu();
    Report reportModel = new Report();
    ReportAccess reportAccessModel = new ReportAccess();

    private bool UserDialogVisible;
    private bool MenuDialogVisible;
    private bool ReportDialogVisible;
    private bool ReportAccessDialogVisible;
    private string reportId;
    private string reportGuid;
    private string reportName;

    private DialogOptions UserDialogOptions = new() { FullWidth = true };
    private DialogOptions MenuDialogOptions = new() { FullWidth = true };
    private DialogOptions ReportDialogOptions = new() { FullWidth = true };
    private DialogOptions ReportAccessDialogOptions = new() { FullWidth = true };

    protected override async Task OnInitializedAsync() { lstUser = await AdminSvc.GetAllUser(); lstTenant = await AdminSvc.GetAllTenant(); }
    private async Task GetAllMenu() { lstMenu = await AdminSvc.GetAllMenu(); }
    private async Task GetAllReport() { lstReport = await AdminSvc.GetAllReport(); }
    private async Task GetAllReportAccess() { lstReport = await AdminSvc.GetAllReport();/*lstAccess = await AdminSvc.GetAllAccess(); GetAllReport();*/ }
    private async Task GetAllUser() { lstUser = await AdminSvc.GetAllUser(); }


    private List<UserAccessDTO> GetAccessByReport(int id, string repGuid, string repName) { reportId = id.ToString(); reportGuid = repGuid; reportName = repName; return AdminSvc.GetAccessByReport(id); }
    private UserLogin GetUser(int id) => AdminSvc.GetUser(id);
    private ROI_BI_Lib.Models.Menu GetMenu(int id) => AdminSvc.GetMenu(id);
    private Report GetReport(int id) => AdminSvc.GetReport(id);
    private ReportAccess GetReportAccess(int id) { return AdminSvc.GetReportAccess(id); }

    private void ManageFormDialog(string formtype, bool action, int id = 0, string guid = null, string name = null)
    {
        switch (formtype)
        {
            case "User": userModel = id > 0 ? GetUser(id) : new UserLogin(); UserDialogVisible = action; break;
            case "Menu": menuModel = id > 0 ? GetMenu(id) : new Models.Menu(); MenuDialogVisible = action; break;
            case "Report": reportModel = id > 0 ? GetReport(id) : new Report(); ReportDialogVisible = action; break;
            case "ReportAccess": lstUserAccess = id > 0 ? GetAccessByReport(id, guid, name) : new List<UserAccessDTO>(); ReportAccessDialogVisible = action; break;
        }
    }

    private async void UserSave() { AdminSvc.SaveUser(userModel); UserDialogVisible = false; await GetAllUser(); }
    private async void MenuSave() { AdminSvc.SaveMenu(menuModel); MenuDialogVisible = false; await GetAllMenu(); }
    private async void ReportSave() { AdminSvc.SaveReport(reportModel); ReportDialogVisible = false; await GetAllReport(); }
    private async void ReportAccessSave() 
    {
        AdminSvc.SaveUserReportAccess(lstUserAccess.ToList());
        //AdminSvc.SaveReportAccess(reportAccessModel); 
        ReportAccessDialogVisible = false; 
        await GetAllReportAccess(); 
    }


    private void ItemUpdated(MudItemDropInfo<UserAccessDTO> dropItem)
    {
        dropItem.Item.HasAccess = dropItem.DropzoneIdentifier;
        var usraccess = lstUserAccess.Where(x=> x.ReportId == dropItem.Item.ReportId && x.UserId == dropItem.Item.UserId).FirstOrDefault();
        usraccess.HasAccess = dropItem.DropzoneIdentifier;
        usraccess.ReportId = Convert.ToInt32(reportId);
    }
}


<MudDialog @bind-IsVisible="UserDialogVisible" Options="UserDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add User
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@userModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="First Name" @bind-Value="userModel.FirstName" For="@(() => userModel.FirstName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Last Name" @bind-Value="userModel.LastName" For="@(() => userModel.LastName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Username" @bind-Value="userModel.UserName" For="@(() => userModel.UserName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Password" @bind-Value="userModel.Password" For="@(() => userModel.Password)" InputType="InputType.Password" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsActive" @bind-Value="userModel.IsActive" For="@(() => userModel.IsActive)" />
                </MudItem>
            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("User",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="UserSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="MenuDialogVisible" Options="MenuDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add Menu
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@menuModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsGroup" @bind-Value="menuModel.IsGroup" For="@(() => menuModel.IsGroup)" />

                    <MudSelect T="int" @bind-Value="menuModel.ParentMenuId" Label="Parent Menu" AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="0">--Select Group--</MudSelectItem>
                        @foreach (var selectItem in lstMenu.Where(x => x.IsGroup == true))
                        {
                            <MudSelectItem Value="@selectItem.MenuId">@selectItem.MenuName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="First Name" @bind-Value="menuModel.MenuName" For="@(() => menuModel.MenuName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Last Name" @bind-Value="menuModel.Description" For="@(() => menuModel.Description)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Icon" @bind-Value="menuModel.Icon" For="@(() => menuModel.Icon)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="Status" @bind-Value="menuModel.Status" For="@(() => menuModel.Status)" />
                </MudItem>

            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("Menu",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="MenuSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="ReportDialogVisible" Options="ReportDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Add Menu
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@reportModel">
            <MudGrid>
                <MudItem Class="pa-2" xs="12">
                    <MudSelect @bind-Value="reportModel.TenantId" T="int" Label="Tenant" AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="0">--Select Tenant--</MudSelectItem>
                        @foreach (var selectItem in lstTenant)
                        {
                            <MudSelectItem Value="@selectItem.TenantId">@selectItem.TenantName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Report Name" @bind-Value="reportModel.ReportName" For="@(() => menuModel.MenuName)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Workspace Id" @bind-Value="reportModel.WorkspaceGuid" For="@(() => menuModel.Description)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudTextField Label="Report Id" @bind-Value="reportModel.ReportGuid" For="@(() => menuModel.Icon)" />
                </MudItem>
                <MudItem Class="pa-2" xs="12">
                    <MudCheckBox Label="IsDashboard" @bind-Value="menuModel.IsGroup" For="@(() => reportModel.IsDashboard)" />
                </MudItem>
            </MudGrid>
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("Report",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="ReportSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="ReportAccessDialogVisible" Options="ReportAccessDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            User Report - Access
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem Class="pa-2" xs="12">
                <MudText>Report Name: @reportName</MudText>
                <MudText>Report Id:  @reportGuid</MudText>
            </MudItem>
            <MudItem Class="pa-2" xs="12">
                <MudDropContainer T="UserAccessDTO"
                                  ItemDropped="ItemUpdated"
                                  ItemsSelector="@((item,dropzone) =>  item.HasAccess == dropzone)"
                                  Items="lstUserAccess"
                                  Class="d-flex flex-wrap flex-grow-1">
                    <ChildContent>
                        <MudDropZone T="UserAccessDTO"
                                     Identifier="TRUE"
                                     DraggingClass="mud-alert-text-info"
                                     ItemDraggingClass="mud-alert-text-info"
                                     Style="overflow:scroll; height:400px"
                                     Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
                            <MudText Class="mb-2">Accessible</MudText>
                        </MudDropZone>

                        <MudDropZone T="UserAccessDTO"
                                     Identifier="FALSE"
                                     DraggingClass="mud-alert-text-info"
                                     ItemDraggingClass="mud-alert-text-info"
                                     Style="overflow:scroll; height:400px"
                                     Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
                            <MudText Class="mb-2">Not Accessible</MudText>
                        </MudDropZone>
                    </ChildContent>
                    <ItemRenderer>
                        <div class="mud-elevation-25 pa-1 my-1">@context.UserName</div>
                    </ItemRenderer>
                </MudDropContainer>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(()=> ManageFormDialog("ReportAccess",false))>Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="ReportAccessSave">Save</MudButton>
    </DialogActions>
</MudDialog>

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-2" Style="height:100%">
    <MudTabPanel Text="User" OnClick="@GetAllUser">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("User",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add User</MudButton>
        <MudTable Items="@lstUser" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>User Name</MudTh>
                <MudTh>Password</MudTh>
                <MudTh>IsActive</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.FirstName  @context.LastName</MudTd>
                <MudTd>@context.UserName</MudTd>
                <MudTd>@context.Password</MudTd>
                <MudTd>@context.IsActive</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@(() => ManageFormDialog("User",true,@context.UserId))" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Menu" OnClick="@GetAllMenu">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("Menu",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add Menu</MudButton>

        <MudTable Items="@lstMenu" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Menu Name</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>IsGroup</MudTh>
                <MudTh>Status</MudTh>
                <MudTh>Icon</MudTh>
                <MudTh>Sort Order</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.MenuName</MudTd>
                <MudTd>@context.Description</MudTd>
                <MudTd>@context.IsGroup</MudTd>
                <MudTd>@context.Status</MudTd>
                <MudTd>@context.Icon</MudTd>
                <MudTd>@context.Sortorder</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@(() => ManageFormDialog("Menu",true,@context.MenuId))" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Report" OnClick="@GetAllReport">
        <MudButton Class="m-2" Style="float:right" OnClick="@(() => ManageFormDialog("Report",true))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info" Size="Size.Small">Add Report</MudButton>

        <MudTable Items="@lstReport" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Report Name</MudTh>
                <MudTh>Report Id</MudTh>
                <MudTh>Password</MudTh>
                <MudTh>IsDashboard</MudTh>
                <MudTh>TenantId</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ReportName</MudTd>
                <MudTd>@context.ReportGuid</MudTd>
                <MudTd>@context.IsDashboard</MudTd>
                <MudTd>@context.TenantId</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@(() => ManageFormDialog("Report",true,@context.ReportId))" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

    </MudTabPanel>
    <MudTabPanel Text="Access" OnClick="@GetAllReportAccess">
        <MudTable Items="@lstReport" Dense="true" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Report Name</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ReportName</MudTd>
                <MudTd>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@(() => ManageFormDialog("ReportAccess",true,@context.ReportId,context.ReportGuid, context.ReportName))" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

    </MudTabPanel>
</MudTabs>






